/*
 * Copyright (c) 2016 - 2116 All Rights Reserved.
 * Powered By [rapid-generator]
 */
package com.mycompany.biz.service.impl;

import java.util.List;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.UserDao;
import com.mycompany.biz.domain.User;
import com.mycompany.biz.service.UserService;

/**
 * UserServiceImpl
 * <pre>
 * database table: user
 * database table comments: User
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class UserServiceImpl implements UserService {

    @Resource(name = "userDao")
    UserDao userDao;

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#insert
     * @see com.mycompany.biz.service.UserService#insert
     */
    @Override
    public User insert(User user) {
        return userDao.insert(user);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#deleteByUserId
     * @see com.mycompany.biz.service.UserService#deleteByUserId
     */
    @Override
    public Long deleteByUserId(String userId) {
        return userDao.deleteByUserId(userId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#deleteByEmail
     * @see com.mycompany.biz.service.UserService#deleteByEmail
     */
    @Override
    public Long deleteByEmail(String email) {
        return userDao.deleteByEmail(email);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#update
     * @see com.mycompany.biz.service.UserService#update
     */
    @Override
    public User update(User user) {
        return userDao.update(user);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUserByUserId
     * @see com.mycompany.biz.service.UserService#getUserByUserId
     */
    @Override
    public User getUserByUserId(String userId) {
        return userDao.getUserByUserId(userId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUserByEmail
     * @see com.mycompany.biz.service.UserService#getUserByEmail
     */
    @Override
    public User getUserByEmail(String email) {
        return userDao.getUserByEmail(email);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUserPageListByDefaultQuery
     * @see com.mycompany.biz.service.UserService#getUserPageListByDefaultQuery
     */
    @Override
    public PageList<User> getUserPageListByDefaultQuery(User user, int pageSize, int pageNum) {
        return userDao.getUserPageListByDefaultQuery(user, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUsersByUserIds
     * @see com.mycompany.biz.service.UserService#getUsersByUserIds
     */
    @Override
    public List<User> getUsersByUserIds(java.util.List<String> userIds) {
        return userDao.getUsersByUserIds(userIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUsersByEmails
     * @see com.mycompany.biz.service.UserService#getUsersByEmails
     */
    @Override
    public List<User> getUsersByEmails(java.util.List<String> emails) {
        return userDao.getUsersByEmails(emails);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#deleteByUserIds
     * @see com.mycompany.biz.service.UserService#deleteByUserIds
     */
    @Override
    public Long deleteByUserIds(java.util.List<String> userIds) {
        return userDao.deleteByUserIds(userIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#deleteByEmails
     * @see com.mycompany.biz.service.UserService#deleteByEmails
     */
    @Override
    public Long deleteByEmails(java.util.List<String> emails) {
        return userDao.deleteByEmails(emails);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#login
     * @see com.mycompany.biz.service.UserService#login
     */
    @Override
    public User login(String username, String password) {
        return userDao.login(username, password);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#getUsers
     * @see com.mycompany.biz.service.UserService#getUsers
     */
    @Override
    public PageList<User> getUsers(String address, java.util.Date beginDate, java.util.Date endDate, int pageSize, int pageNum) {
        return userDao.getUsers(address, beginDate, endDate, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.UserDao#deleteByIds
     * @see com.mycompany.biz.service.UserService#deleteByIds
     */
    @Override
    public Long deleteByIds(java.util.List<String> userIds) {
        return userDao.deleteByIds(userIds);
    }

    /*** 保存user,有id时更新，没有id时插入,并带回新的id，返回 user*/
    @Override
    public User saveUser(User user) {
        if (user != null) {
            java.lang.String userId = user.getUserId();
            if (StringUtil.isBlank(userId)) {
                insert(user);
            } else {
                update(user);
            }
        }
        return user;
    }

    /*** 批量保存users,有id时更新，没有id时插入,并带回新的id，返回 users*/
    @Override
    public List<User> saveUsers(List<User> users) {
        for (User user : users) {
            this.saveUser(user);
        }
        return users;
    }
}
