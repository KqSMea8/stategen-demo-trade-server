/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.CollectionUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.TopicUpDao;
import com.mycompany.biz.domain.TopicUp;
import com.mycompany.biz.service.TopicUpService;

/**
 * TopicUpServiceImpl
 * <pre>
 * database table: topic_up
 * database table comments: TopicUp
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class TopicUpServiceImpl implements TopicUpService {

    //<#--
    @Resource(name = "topicUpDao")
    TopicUpDao topicUpDao;

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#insert
     * @see com.mycompany.biz.service.TopicUpService#insert
     */
    @Override
    public TopicUp insert(TopicUp topicUp) {
        return topicUpDao.insert(topicUp);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#delete
     * @see com.mycompany.biz.service.TopicUpService#delete
     */
    @Override
    public String delete(String upId) {
        return topicUpDao.delete(upId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#update
     * @see com.mycompany.biz.service.TopicUpService#update
     */
    @Override
    public TopicUp update(TopicUp topicUp) {
        return topicUpDao.update(topicUp);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#getTopicUpByUpId
     * @see com.mycompany.biz.service.TopicUpService#getTopicUpByUpId
     */
    @Override
    public TopicUp getTopicUpByUpId(String upId) {
        return topicUpDao.getTopicUpByUpId(upId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#getTopicUpsByUpIds
     * @see com.mycompany.biz.service.TopicUpService#getTopicUpsByUpIds
     */
    @Override
    public List<TopicUp> getTopicUpsByUpIds(java.util.List<String> upIds) {
        return topicUpDao.getTopicUpsByUpIds(upIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#deleteByUpIds
     * @see com.mycompany.biz.service.TopicUpService#deleteByUpIds
     */
    @Override
    public java.util.List<String> deleteByUpIds(java.util.List<String> upIds) {
        return topicUpDao.deleteByUpIds(upIds);
    }

    /*** 保存topicUp,有id时更新，没有id时插入,并带回新的id，返回 topicUp*/
    @Override
    public TopicUp saveTopicUp(TopicUp topicUp) {
        if (topicUp != null) {
            java.lang.String upId = topicUp.getUpId();
            if (StringUtil.isBlank(upId)) {
                insert(topicUp);
            } else {
                update(topicUp);
            }
        }
        return topicUp;
    }

    /*** 批量保存topicUps,有id时更新，没有id时插入,并带回新的id，返回 topicUps*/
    @Override
    public List<TopicUp> saveTopicUps(List<TopicUp> topicUps) {
        for (TopicUp topicUp : topicUps) {
            this.saveTopicUp(topicUp);
        }
        return topicUps;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#getTopicUpsGroupCountByTopicIds
     * @see com.mycompany.biz.service.TopicUpService#getTopicUpsGroupCountByTopicIds
     */
    @Override
    public List<TopicUp> getTopicUpsGroupCountByTopicIds(java.util.List<String> objectIds, String authorId) {
        return topicUpDao.getTopicUpsGroupCountByTopicIds(objectIds, authorId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#getTopicUpByObjectIdAndAuthorId
     * @see com.mycompany.biz.service.TopicUpService#getTopicUpByObjectIdAndAuthorId
     */
    @Override
    public List<TopicUp> getTopicUpByObjectIdAndAuthorId(String objectId, String authorId) {
        return topicUpDao.getTopicUpByObjectIdAndAuthorId(objectId, authorId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.TopicUpDao#getTopicUpPageList
     * @see com.mycompany.biz.service.TopicUpService#getTopicUpPageList
     */
    @Override
    public PageList<TopicUp> getTopicUpPageList(TopicUp topicUp, int pageSize, int pageNum) {
        return topicUpDao.getTopicUpPageList(topicUp, pageSize, pageNum);
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, TopicUp> destSetMethod) {
        if (CollectionUtil.isNotEmpty(dests)) {
            Set<String> upIds = CollectionUtil.toSet(dests, destGetMethod);
            List<TopicUp> topicUps = this.getTopicUpsByUpIds(new ArrayList<String>(upIds));
            if (CollectionUtil.isNotEmpty(topicUps)) {
                CollectionUtil.setModelByList(dests, topicUps, destGetMethod, destSetMethod, TopicUp::getUpId);
            }
        }
    }
    //-->
    //
}
