/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service;

import java.util.List;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.AssignSerice;

import com.mycompany.biz.domain.UserHoppy;

/**
 * UserHoppyService
 * <pre>
 * database table: user_hoppy
 * database table comments: UserHoppy
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public interface UserHoppyService extends UserHoppyServiceFacade, AssignSerice<UserHoppy, Integer> {

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#insert
     */
    public UserHoppy insert(UserHoppy userHoppy);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#delete
     */
    public Integer delete(Integer id);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#update
     */
    public UserHoppy update(UserHoppy userHoppy);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#getUserHoppyById
     */
    public UserHoppy getUserHoppyById(Integer id);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#getUserHoppyPageList
     */
    public PageList<UserHoppy> getUserHoppyPageList(UserHoppy userHoppy, int pageSize, int pageNum);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#getUserHoppysByIds
     */
    public List<UserHoppy> getUserHoppysByIds(java.util.List<Integer> ids);

    /**
     * 
     * @see com.mycompany.biz.dao.UserHoppyDao#deleteByIds
     */
    public java.util.List<Integer> deleteByIds(java.util.List<Integer> ids);

    /*** 保存userHoppy,有id时更新，没有id时插入,并带回新的id，返回 userHoppy
     * @see com.mycompany.biz.dao.UserHoppyDao#insert
     */
    public UserHoppy saveUserHoppy(UserHoppy userHoppy);

    /** 批量保存userHoppys,有id时更新，没有id时插入,并带回新的id，返回 userHoppys
     * @see com.mycompany.biz.dao.UserHoppyDao#insert
     */
    public List<UserHoppy> saveUserHoppys(List<UserHoppy> userHoppys);
}
