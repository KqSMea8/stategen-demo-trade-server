/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.function.BiConsumer;
import java.util.function.Function;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.CollectionUtil;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.ProvinceDao;
import com.mycompany.biz.domain.Province;
import com.mycompany.biz.service.ProvinceService;

/**
 * ProvinceServiceImpl
 * <pre>
 * database table: province
 * database table comments: Province
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class ProvinceServiceImpl implements ProvinceService {

    @Resource(name = "provinceDao")
    ProvinceDao provinceDao;

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#insert
     * @see com.mycompany.biz.service.ProvinceService#insert
     */
    @Override
    public Province insert(Province province) {
        return provinceDao.insert(province);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#delete
     * @see com.mycompany.biz.service.ProvinceService#delete
     */
    @Override
    public String delete(String provinceId) {
        return provinceDao.delete(provinceId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#update
     * @see com.mycompany.biz.service.ProvinceService#update
     */
    @Override
    public Province update(Province province) {
        return provinceDao.update(province);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#getProvinceByProvinceId
     * @see com.mycompany.biz.service.ProvinceService#getProvinceByProvinceId
     */
    @Override
    public Province getProvinceByProvinceId(String provinceId) {
        return provinceDao.getProvinceByProvinceId(provinceId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#getProvincePageList
     * @see com.mycompany.biz.service.ProvinceService#getProvincePageList
     */
    @Override
    public PageList<Province> getProvincePageList(Province province, int pageSize, int pageNum) {
        return provinceDao.getProvincePageList(province, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#getProvincesByProvinceIds
     * @see com.mycompany.biz.service.ProvinceService#getProvincesByProvinceIds
     */
    @Override
    public List<Province> getProvincesByProvinceIds(java.util.List<String> provinceIds) {
        return provinceDao.getProvincesByProvinceIds(provinceIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#deleteByProvinceIds
     * @see com.mycompany.biz.service.ProvinceService#deleteByProvinceIds
     */
    @Override
    public java.util.List<String> deleteByProvinceIds(java.util.List<String> provinceIds) {
        return provinceDao.deleteByProvinceIds(provinceIds);
    }

    /*** 保存province,有id时更新，没有id时插入,并带回新的id，返回 province*/
    @Override
    public Province saveProvince(Province province) {
        if (province != null) {
            java.lang.String provinceId = province.getProvinceId();
            if (StringUtil.isBlank(provinceId)) {
                insert(province);
            } else {
                update(province);
            }
        }
        return province;
    }

    /*** 批量保存provinces,有id时更新，没有id时插入,并带回新的id，返回 provinces*/
    @Override
    public List<Province> saveProvinces(List<Province> provinces) {
        for (Province province : provinces) {
            this.saveProvince(province);
        }
        return provinces;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.ProvinceDao#getProvinceOptions
     * @see com.mycompany.biz.service.ProvinceService#getProvinceOptions
     */
    @Override
    public List<Province> getProvinceOptions() {
        return provinceDao.getProvinceOptions();
    }

    @Override
    public <D> void assignBeanTo(Collection<D> dests, Function<? super D, String> destGetMethod, BiConsumer<D, Province> destSetMethod) {
        if (CollectionUtil.isNotEmpty(dests)) {
            Set<String> provinceIds = CollectionUtil.toSet(dests, destGetMethod);
            List<Province> provinces = this.getProvincesByProvinceIds(new ArrayList<String>(provinceIds));
            if (CollectionUtil.isNotEmpty(provinces)) {
                CollectionUtil.setModelByList(dests, provinces, destGetMethod, destSetMethod, Province::getProvinceId);
            }
        }
    }
}
