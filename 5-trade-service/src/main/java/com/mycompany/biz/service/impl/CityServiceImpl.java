/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.service.impl;

import java.util.List;
import javax.annotation.Resource;

import org.stategen.framework.lite.PageList;
import org.stategen.framework.util.StringUtil;

import com.mycompany.biz.dao.CityDao;
import com.mycompany.biz.domain.City;
import com.mycompany.biz.service.CityService;

/**
 * CityServiceImpl
 * <pre>
 * database table: city
 * database table comments: City
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 新生成的类中的方法，只有在不同名的情况下才会被追加到该类下，
 * 因此该类可以修改任何部分
 * </pre>
 */
public class CityServiceImpl implements CityService {

    @Resource(name = "cityDao")
    CityDao cityDao;

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#insert
     * @see com.mycompany.biz.service.CityService#insert
     */
    @Override
    public City insert(City city) {
        return cityDao.insert(city);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#delete
     * @see com.mycompany.biz.service.CityService#delete
     */
    @Override
    public String delete(String cityId) {
        return cityDao.delete(cityId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#update
     * @see com.mycompany.biz.service.CityService#update
     */
    @Override
    public City update(City city) {
        return cityDao.update(city);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#getCityByCityId
     * @see com.mycompany.biz.service.CityService#getCityByCityId
     */
    @Override
    public City getCityByCityId(String cityId) {
        return cityDao.getCityByCityId(cityId);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#getCityPageList
     * @see com.mycompany.biz.service.CityService#getCityPageList
     */
    @Override
    public PageList<City> getCityPageList(City city, int pageSize, int pageNum) {
        return cityDao.getCityPageList(city, pageSize, pageNum);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#getCitysByCityIds
     * @see com.mycompany.biz.service.CityService#getCitysByCityIds
     */
    @Override
    public List<City> getCitysByCityIds(java.util.List<String> cityIds) {
        return cityDao.getCitysByCityIds(cityIds);
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#deleteByCityIds
     * @see com.mycompany.biz.service.CityService#deleteByCityIds
     */
    @Override
    public java.util.List<String> deleteByCityIds(java.util.List<String> cityIds) {
        return cityDao.deleteByCityIds(cityIds);
    }

    /*** 保存city,有id时更新，没有id时插入,并带回新的id，返回 city*/
    @Override
    public City saveCity(City city) {
        if (city != null) {
            java.lang.String cityId = city.getCityId();
            if (StringUtil.isBlank(cityId)) {
                insert(city);
            } else {
                update(city);
            }
        }
        return city;
    }

    /*** 批量保存citys,有id时更新，没有id时插入,并带回新的id，返回 citys*/
    @Override
    public List<City> saveCitys(List<City> citys) {
        for (City city : citys) {
            this.saveCity(city);
        }
        return citys;
    }

    /**
     * 
     * @see com.mycompany.biz.dao.CityDao#getCitys
     * @see com.mycompany.biz.service.CityService#getCitys
     */
    @Override
    public List<City> getCitys(String provinceId) {
        return cityDao.getCitys(provinceId);
    }
}
