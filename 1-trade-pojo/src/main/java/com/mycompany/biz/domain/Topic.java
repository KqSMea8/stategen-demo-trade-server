/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.domain;

import java.text.SimpleDateFormat;
import java.util.List;

import javax.persistence.Id;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Max;

import com.mycompany.biz.enums.TopicType;
import io.swagger.annotations.ApiModelProperty;

import lombok.Getter;
import lombok.Setter;

/**
 * Topic
 * <pre>
 * database table: topic
 * database table comments: Topic
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅不可以修改dalgen生成的属生(field)类型 ,方法(Method)返回值类型和参数类型
 * 不建议使@Data,其hashCode有问题
 * </pre>
 */
@Getter
@Setter
public class Topic implements java.io.Serializable {

    private List<TopicReply> replies;

    private User author;

    private Long replyCount;

    /*** tabLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("tabLike")
    private transient String tabLike;

    private static final long serialVersionUID = -5216457518046898601L;

    /***topicId   db_column: topic_id VARCHAR */
    @ApiModelProperty("topicId")
    @Id
    @Max(64)
    private String topicId;

    /***authorId   db_column: author_id VARCHAR */
    @ApiModelProperty("authorId")
    @Max(64)
    private String authorId;

    /***topicType   db_column: topic_type VARCHAR */
    @ApiModelProperty("topicType")
    private TopicType topicType;

    /***content   db_column: content LONGVARCHAR */
    @ApiModelProperty("content")
    @Max(65535)
    private String content;

    /***title   db_column: title VARCHAR */
    @ApiModelProperty("title")
    @Max(64)
    private String title;

    /***lastReplyAt   db_column: last_reply_at VARCHAR */
    @ApiModelProperty("lastReplyAt")
    @Max(64)
    private String lastReplyAt;

    /***good   db_column: good VARCHAR */
    @ApiModelProperty("good")
    @Max(255)
    private String good;

    /***top   db_column: top VARCHAR */
    @ApiModelProperty("top")
    @Max(255)
    private String top;

    /***visitCount   db_column: visit_count BIGINT */
    @ApiModelProperty("visitCount")
    private Long visitCount;

    /***createAt   db_column: create_at VARCHAR */
    @ApiModelProperty("createAt")
    @Max(255)
    private String createAt;

    /***创建时间   db_column: create_time TIMESTAMP */
    @ApiModelProperty(value = "创建时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date createTime;

    /***更新时间   db_column: update_time TIMESTAMP */
    @ApiModelProperty(value = "更新时间", hidden = true)
    @Temporal(TemporalType.TIMESTAMP)
    private java.util.Date updateTime;

    /***是否删除(0:正常，1删除)   db_column: delete_flag INTEGER */
    @ApiModelProperty(value = "是否删除(0:正常，1删除)", hidden = true)
    private Integer deleteFlag;

    /*----------------getter & setter ignore by lombok -------------------*/
    public String toString() {
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd H:m:ss.SSS");
        StringBuffer sb = new StringBuffer(1024);
        sb.append('{');
        sb.append("topicIds=").append(topicIds).append('\n');
        sb.append("authorIds=").append(authorIds).append('\n');
        sb.append("topicTypes=").append(topicTypes).append('\n');
        sb.append("contentLike=").append(contentLike).append('\n');
        sb.append("titleLike=").append(titleLike).append('\n');
        sb.append("lastReplyAtLike=").append(lastReplyAtLike).append('\n');
        sb.append("goodLike=").append(goodLike).append('\n');
        sb.append("topLike=").append(topLike).append('\n');
        sb.append("visitCountMin=").append(visitCountMin).append('\n');
        sb.append("visitCountMax=").append(visitCountMax).append('\n');
        sb.append("createAtLike=").append(createAtLike).append('\n');
        sb.append("createTimeMin=").append(createTimeMin != null ? df.format(createTimeMin) : null).append('\n');
        sb.append("createTimeMax=").append(createTimeMax != null ? df.format(createTimeMax) : null).append('\n');
        sb.append("updateTimeMin=").append(updateTimeMin != null ? df.format(updateTimeMin) : null).append('\n');
        sb.append("updateTimeMax=").append(updateTimeMax != null ? df.format(updateTimeMax) : null).append('\n');
        sb.append("topicId=").append(topicId).append('\n');
        sb.append("authorId=").append(authorId).append('\n');
        sb.append("topicType=").append(topicType).append('\n');
        sb.append("content=").append(content).append('\n');
        sb.append("title=").append(title).append('\n');
        sb.append("lastReplyAt=").append(lastReplyAt).append('\n');
        sb.append("good=").append(good).append('\n');
        sb.append("top=").append(top).append('\n');
        sb.append("visitCount=").append(visitCount).append('\n');
        sb.append("createAt=").append(createAt).append('\n');
        sb.append("createTime=").append(createTime != null ? df.format(createTime) : null).append('\n');
        sb.append("updateTime=").append(updateTime != null ? df.format(updateTime) : null).append('\n');
        sb.append("deleteFlag=").append(deleteFlag);
        sb.append('}');
        return sb.toString();
    }

    /*** topicIds in getTopicPageListByDefaultQuery */
    @ApiModelProperty("topicIds")
    private transient java.util.List<String> topicIds;

    /*** authorIds in getTopicPageListByDefaultQuery */
    @ApiModelProperty("authorIds")
    private transient java.util.List<String> authorIds;

    /*** topicTypes in getTopicPageListByDefaultQuery */
    @ApiModelProperty("topicTypes")
    private transient java.util.List<com.mycompany.biz.enums.TopicType> topicTypes;

    /*** contentLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("contentLike")
    private transient String contentLike;

    /*** titleLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("titleLike")
    private transient String titleLike;

    /*** lastReplyAtLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("lastReplyAtLike")
    private transient String lastReplyAtLike;

    /*** goodLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("goodLike")
    private transient String goodLike;

    /*** topLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("topLike")
    private transient String topLike;

    /*** visitCountMin in getTopicPageListByDefaultQuery */
    @ApiModelProperty("visitCountMin")
    private transient Long visitCountMin;

    /*** visitCountMax in getTopicPageListByDefaultQuery */
    @ApiModelProperty("visitCountMax")
    private transient Long visitCountMax;

    /*** createAtLike in getTopicPageListByDefaultQuery */
    @ApiModelProperty("createAtLike")
    private transient String createAtLike;

    /*** 创建时间Min in getTopicPageListByDefaultQuery */
    @ApiModelProperty("创建时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    private transient java.util.Date createTimeMin;

    /*** 创建时间Max in getTopicPageListByDefaultQuery */
    @ApiModelProperty("创建时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    private transient java.util.Date createTimeMax;

    /*** 更新时间Min in getTopicPageListByDefaultQuery */
    @ApiModelProperty("更新时间Min")
    @Temporal(TemporalType.TIMESTAMP)
    private transient java.util.Date updateTimeMin;

    /*** 更新时间Max in getTopicPageListByDefaultQuery */
    @ApiModelProperty("更新时间Max")
    @Temporal(TemporalType.TIMESTAMP)
    private transient java.util.Date updateTimeMax;

    public String getAuthor_id() {
        return authorId;
    }

    public void setAuthor_id(String id) {
        this.authorId = id;
    }

    public String getLast_reply_at() {
        return lastReplyAt;
    }

    public void setLast_reply_at(String id) {
        this.lastReplyAt = id;
    }

    public Long getReply_count() {
        return replyCount;
    }

    public void setReply_count(Long id) {
        this.replyCount = id;
    }

    public Long getVisit_count() {
        return visitCount;
    }

    public void setVisit_count(Long id) {
        this.visitCount = id;
    }

    public String getCreate_at() {
        return createAt;
    }

    public void setCreate_at(String id) {
        this.createAt = id;
    }

    public String getId() {
        return topicId;
    }

    public void setId(String id) {
        this.topicId = id;
    }
}
