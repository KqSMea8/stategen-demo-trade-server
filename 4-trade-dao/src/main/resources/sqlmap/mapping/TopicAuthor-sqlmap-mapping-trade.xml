<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 本文件由dalgen生成，任何在本文件上的手工修改将会在下次生成时被覆盖 -->
<sqlMap>


    <resultMap id="TopicAuthor.trade.RM" class="com.mycompany.biz.domain.TopicAuthor">
        <result property="authorId" column="author_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="loginname" column="loginname" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="avatarUrl" column="avatar_url" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="updateTime" column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="deleteFlag" column="delete_flag" javaType="java.lang.Integer" jdbcType="INTEGER"  />
    </resultMap>
    

	
	
    
	<insert id="insert.TopicAuthor.trade">
		insert into topic_author (
            create_time
            , update_time
            , delete_flag
            <isNotNull prepend="," property="authorId"> author_id </isNotNull>
            <isNotNull prepend="," property="loginname"> loginname </isNotNull>
            <isNotNull prepend="," property="avatarUrl"> avatar_url </isNotNull>
            ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0 
            <isNotNull prepend="," property="authorId"> #authorId# </isNotNull> 
            <isNotNull prepend="," property="loginname"> #loginname# </isNotNull> 
            <isNotNull prepend="," property="avatarUrl"> #avatarUrl# </isNotNull>)
            <selectKey keyProperty="authorId" resultClass="String" type="pre">
                select if((#authorId#  is null) ,CONCAT(DATE_FORMAT(CURRENT_TIMESTAMP(6),'%Y%m%d%H%i%s%f'),LPAD(ROUND(RAND()*100000000),8,'0')) ,#authorId# ) as authorId
            </selectKey>
	</insert>
	
	<update id="delete.TopicAuthor.trade">
		UPDATE topic_author SET
            delete_flag = 1
            , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and author_id = #authorId#
	</update>
	
    
	
	<update id="deleteByLoginname.TopicAuthor.trade">
		UPDATE topic_author SET
            delete_flag = 1
            , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and loginname = #loginname#
	</update>
	
    
	
	<update id="update.TopicAuthor.trade">
		UPDATE topic_author
            SET update_time= CURRENT_TIMESTAMP(6)
            <dynamic>
                <isNotNull prepend="," property="loginname">
                    loginname =  #loginname#
                </isNotNull>
                <isNotNull prepend="," property="avatarUrl">
                    avatar_url =  #avatarUrl#
                </isNotNull>
            </dynamic>
            where
            delete_flag = 0
            and author_id = #authorId#
	</update>
	
    
	
	<select id="getTopicAuthorByAuthorId.TopicAuthor.trade" resultMap="TopicAuthor.trade.RM" >
    	select
 /* getTopicAuthorByAuthorId.TopicAuthor.trade */             a.author_id,
            a.loginname,
            a.avatar_url,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_author a
            where
            a.delete_flag = 0
            and a.author_id = #authorId#
	</select>	

	    
	
	
    
	
	<select id="getTopicAuthorByLoginname.TopicAuthor.trade" resultMap="TopicAuthor.trade.RM" >
    	select
 /* getTopicAuthorByLoginname.TopicAuthor.trade */             a.author_id,
            a.loginname,
            a.avatar_url,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_author a
            where
            a.delete_flag = 0
            and a.loginname = #loginname#
	</select>	

	    
	
	
    
	
	<select id="getTopicAuthorPageListByDefaultQuery.TopicAuthor.trade" resultMap="TopicAuthor.trade.RM" >
    	select
 /* getTopicAuthorPageListByDefaultQuery.TopicAuthor.trade */             a.author_id,
            a.loginname,
            a.avatar_url,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_author a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="authorId">
               a.author_id=#authorId#
            </isNotNull>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="loginnameLike">
                a.loginname like CONCAT('%',#loginnameLike#,'%')
            </isNotEmpty>
            <isNotEmpty open="and" property="avatarUrlLike">
                a.avatar_url like CONCAT('%',#avatarUrlLike#,'%')
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="authorId">
            <isEmpty property="authorIds">
            <isEmpty property="loginnameLike">
            <isEmpty property="avatarUrlLike">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isEmpty>
            </isEmpty>
            </isNull>
			limit #offset#,#limit#
	</select>	

	<select id="getTopicAuthorPageListByDefaultQuery.TopicAuthor.trade.count" resultClass="long" >
    	select  /* getTopicAuthorPageListByDefaultQuery.TopicAuthor.trade.count */ count(*)  from topic_author a
            where
            a.delete_flag = 0
            <isNotNull open="and" property="authorId">
               a.author_id=#authorId#
            </isNotNull>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="loginnameLike">
                a.loginname like CONCAT('%',#loginnameLike#,'%')
            </isNotEmpty>
            <isNotEmpty open="and" property="avatarUrlLike">
                a.avatar_url like CONCAT('%',#avatarUrlLike#,'%')
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isNull property="authorId">
            <isEmpty property="authorIds">
            <isEmpty property="loginnameLike">
            <isEmpty property="avatarUrlLike">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isEmpty>
            </isEmpty>
            </isNull>
	</select>
	    
	
	
    
	
	<select id="getTopicAuthorsByAuthorIds.TopicAuthor.trade" resultMap="TopicAuthor.trade.RM" >
    	select
 /* getTopicAuthorsByAuthorIds.TopicAuthor.trade */             a.author_id,
            a.loginname,
            a.avatar_url,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_author a
            where
            a.delete_flag = 0
            <isEmpty open="and" property="authorIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
	</select>	

	    
	
	
    
	
	<select id="getTopicAuthorsByLoginnames.TopicAuthor.trade" resultMap="TopicAuthor.trade.RM" >
    	select
 /* getTopicAuthorsByLoginnames.TopicAuthor.trade */             a.author_id,
            a.loginname,
            a.avatar_url,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_author a
            where
            a.delete_flag = 0
            <isEmpty open="and" property="loginnames">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="loginnames">
                a.loginname in
                <iterate close=")" conjunction="," open="(" property="loginnames">
                    #loginnames[]#
                </iterate>
            </isNotEmpty>
	</select>	

	    
	
	
    
	
	<update id="deleteByAuthorIds.TopicAuthor.trade">
		UPDATE topic_author SET
               delete_flag = 1
               , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            <isEmpty open="and" property="authorIds">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="authorIds">
                author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
	</update>
	
    
	
	<update id="deleteByLoginnames.TopicAuthor.trade">
		UPDATE topic_author SET
               delete_flag = 1
               , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            <isEmpty open="and" property="loginnames">
                1=0
            </isEmpty>
            <isNotEmpty open="and" property="loginnames">
                loginname in
                <iterate close=")" conjunction="," open="(" property="loginnames">
                    #loginnames[]#
                </iterate>
            </isNotEmpty>
	</update>
	
    

</sqlMap>

