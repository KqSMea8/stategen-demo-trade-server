<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<!-- 本文件由dalgen生成，任何在本文件上的手工修改将会在下次生成时被覆盖 -->
<sqlMap>


    <resultMap id="TopicUp.trade.RM" class="com.mycompany.biz.domain.TopicUp">
        <result property="upId" column="up_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="topicOrReplyId" column="topic_or_reply_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="authorId" column="author_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="createTime" column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="updateTime" column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP"  />
        <result property="deleteFlag" column="delete_flag" javaType="java.lang.Integer" jdbcType="INTEGER"  />
    </resultMap>
    

	
	
    
	<insert id="insert.TopicUp.trade">
		insert into topic_up (
            create_time
            , update_time
            , delete_flag
            <isNotNull prepend="," property="upId"> up_id </isNotNull>
            <isNotNull prepend="," property="topicOrReplyId"> topic_or_reply_id </isNotNull>
            <isNotNull prepend="," property="authorId"> author_id </isNotNull>
            ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0 
            <isNotNull prepend="," property="upId"> #upId# </isNotNull> 
            <isNotNull prepend="," property="topicOrReplyId"> #topicOrReplyId# </isNotNull> 
            <isNotNull prepend="," property="authorId"> #authorId# </isNotNull>)
            <selectKey keyProperty="upId" resultClass="String" type="pre">
                select if((#upId#  is null) ,CONCAT(DATE_FORMAT(CURRENT_TIMESTAMP(6),'%Y%m%d%H%i%s%f'),LPAD(ROUND(RAND()*100000000),8,'0')) ,#upId# ) as upId
            </selectKey>
	</insert>
	
	<update id="delete.TopicUp.trade">
		UPDATE topic_up SET
            delete_flag = 1
            , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and up_id = #upId#
	</update>
	
    
	
	<update id="update.TopicUp.trade">
		UPDATE topic_up
            SET update_time= CURRENT_TIMESTAMP(6)
            <dynamic>
                <isNotNull prepend="," property="topicOrReplyId">
                    topic_or_reply_id =  #topicOrReplyId#
                </isNotNull>
                <isNotNull prepend="," property="authorId">
                    author_id =  #authorId#
                </isNotNull>
            </dynamic>
            where
            delete_flag = 0
            and up_id = #upId#
	</update>
	
    
	
	<select id="getTopicUpByUpId.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpByUpId.TopicUp.trade */             a.up_id,
            a.topic_or_reply_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_up a
            where
            a.delete_flag = 0
            and a.up_id = #upId#
	</select>	

	    
	
	
    
	
	<select id="getTopicUpPageListByDefaultQuery.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpPageListByDefaultQuery.TopicUp.trade */             a.up_id,
            a.topic_or_reply_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_up a
            where
            a.delete_flag = 0
            <isNotEmpty open="and" property="upIds">
                a.up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="topicOrReplyIds">
                a.topic_or_reply_id in
                <iterate close=")" conjunction="," open="(" property="topicOrReplyIds">
                    #topicOrReplyIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isEmpty property="upIds">
            <isEmpty property="topicOrReplyIds">
            <isEmpty property="authorIds">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isEmpty>
            </isEmpty>
			limit #offset#,#limit#
	</select>	

	<select id="getTopicUpPageListByDefaultQuery.TopicUp.trade.count" resultClass="long" >
    	select  /* getTopicUpPageListByDefaultQuery.TopicUp.trade.count */ count(*)  from topic_up a
            where
            a.delete_flag = 0
            <isNotEmpty open="and" property="upIds">
                a.up_id in
                <iterate close=")" conjunction="," open="(" property="upIds">
                    #upIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="topicOrReplyIds">
                a.topic_or_reply_id in
                <iterate close=")" conjunction="," open="(" property="topicOrReplyIds">
                    #topicOrReplyIds[]#
                </iterate>
            </isNotEmpty>
            <isNotEmpty open="and" property="authorIds">
                a.author_id in
                <iterate close=")" conjunction="," open="(" property="authorIds">
                    #authorIds[]#
                </iterate>
            </isNotEmpty>
            <isNotNull open="and" property="createTimeMin">
                a.create_time >=#createTimeMin#
            </isNotNull>
            <isNotNull open="and" property="createTimeMax">
                a.create_time &lt;#createTimeMax#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMin">
                a.update_time >=#updateTimeMin#
            </isNotNull>
            <isNotNull open="and" property="updateTimeMax">
                a.update_time &lt;#updateTimeMax#
            </isNotNull>
            <isEmpty property="upIds">
            <isEmpty property="topicOrReplyIds">
            <isEmpty property="authorIds">
            <isNull property="createTimeMin">
            <isNull property="createTimeMax">
            <isNull property="updateTimeMin">
            <isNull property="updateTimeMax">
              and 0 = 1
            </isNull>
            </isNull>
            </isNull>
            </isNull>
            </isEmpty>
            </isEmpty>
            </isEmpty>
	</select>
	    
	
	
    
	
	<select id="getTopicUpsByUpIds.TopicUp.trade" resultMap="TopicUp.trade.RM" >
    	select
 /* getTopicUpsByUpIds.TopicUp.trade */             a.up_id,
            a.topic_or_reply_id,
            a.author_id,
            a.create_time,
            a.update_time,
            a.delete_flag
            from topic_up a
            where
            a.delete_flag = 0
            and a.up_id in
            <iterate close=")" conjunction="," open="(" property="upIds">
                #upIds[]#
            </iterate>
	</select>	

	    
	
	
    
	
	<update id="deleteByUpIds.TopicUp.trade">
		UPDATE topic_up SET
               delete_flag = 1
               , update_time = CURRENT_TIMESTAMP(6)
            where
            delete_flag = 0
            and up_id in
            <iterate close=")" conjunction="," open="(" property="upIds">
                #upIds[]#
            </iterate>
	</update>
	
    
    <resultMap id="getTopicUpsGroupCountByTopicId.object.trade.RM" class="com.mycompany.biz.domain.TopicUp">
        <result property="topicOrReplyId" column="topic_or_reply_id" javaType="java.lang.String" jdbcType="VARCHAR"  />
        <result property="cnt" column="cnt" javaType="java.lang.Long" jdbcType="BIGINT"  />
    </resultMap>
	
	<select id="getTopicUpsGroupCountByTopicId.TopicUp.trade" resultMap="getTopicUpsGroupCountByTopicId.object.trade.RM" >
    	select  /* getTopicUpsGroupCountByTopicId.TopicUp.trade */ topic_or_reply_id,cnt  FROM
          topic_up tu
        LEFT JOIN topic_reply tr ON tr.topic_reply_id = tu.topic_or_reply_id
        LEFT JOIN topic t ON t.topic_id = tr.topic_id
        WHERE
          t.topic_id = #topicId#
        GROUP BY
          tu.topic_or_reply_id
	</select>	

	    
	
	
    

</sqlMap>

