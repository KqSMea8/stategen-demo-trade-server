/*
 * Do not remove this unless you get business authorization.
 * Copyright (c) 2016 - 2018 All Rights Reserved.
 * Powered By [stategen.dalgen]
 */
package com.mycompany.biz.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.dao.DataAccessException;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import org.stategen.framework.ibatis.util.PageQueryUtils;
import org.stategen.framework.lite.PageList;

import com.mycompany.biz.dao.UploadFileDao;
import com.mycompany.biz.domain.UploadFile;

/**
 * UploadFileDao
 * <pre>
 * database table: upload_file
 * database table comments: UploadFile
 * This file is generated by <tt>dalgen</tt>, a DAL (Data Access Layer)
 *
 * 该类仅可以修改引用
 * </pre>
 */
public class UploadFileDaoImpl  extends SqlMapClientDaoSupport implements UploadFileDao {

	/**
	 * 
	 * sql:insert into upload_file ( create_time , update_time , delete_flag , file_id , url , size , name , type , user_id ) VALUES (CURRENT_TIMESTAMP(6),CURRENT_TIMESTAMP(6),0,?,?,?,?,?,?)
	 */
	public UploadFile insert(UploadFile uploadFile) throws DataAccessException {
		if(uploadFile == null) {
			throw new IllegalArgumentException("Can't insert a null data object into db.");
		}
        getSqlMapClientTemplate().insert("insert.UploadFile.trade", uploadFile);
		return uploadFile;
	}

	/**
	 * 
	 * sql:UPDATE upload_file SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and file_id = ?
	 */
	public String delete(String fileId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("fileId",fileId);
        getSqlMapClientTemplate().update("delete.UploadFile.trade", params);
        return fileId;
	}

	/**
	 * 
	 * sql:UPDATE upload_file SET update_time= CURRENT_TIMESTAMP(6) , url = ? , size = ? , name = ? , type = ? , user_id = ? where delete_flag = 0 and file_id = ?
	 */
	public UploadFile update(UploadFile uploadFile) throws DataAccessException {
		if(uploadFile == null) {
			throw new IllegalArgumentException("Can't update by a null data object.");
		}
        getSqlMapClientTemplate().update("update.UploadFile.trade", uploadFile);
		return uploadFile;
	}

	/**
	 * 
	 * sql:select a.file_id, a.url, a.size, a.name, a.type, a.user_id, a.create_time, a.update_time, a.delete_flag from upload_file a where a.delete_flag = 0 and a.file_id = ?
	 */
	public UploadFile getUploadFileByFileId(String fileId) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("fileId",fileId);
		return (UploadFile)getSqlMapClientTemplate().queryForObject("getUploadFileByFileId.UploadFile.trade",params);
	}

	/**
	 * 
	 * sql:select a.file_id, a.url, a.size, a.name, a.type, a.user_id, a.create_time, a.update_time, a.delete_flag from upload_file a where a.delete_flag = 0 and a.file_id=? and a.file_id in ( ? ) and a.size >=? and a.size <? and a.name=? and a.name like CONCAT('%',?,'%') and a.type=? and a.type in ( ? ) and a.user_id=? and a.user_id in ( ? ) and a.create_time >=? and a.create_time <? and a.update_time >=? and a.update_time <? and 0 = 1 order by a.update_time desc, a.create_time desc
	 */
    @SuppressWarnings("unchecked")
	public PageList<UploadFile> getUploadFilePageList(UploadFile uploadFile, int pageSize, int pageNum) throws DataAccessException {
		return (PageList<UploadFile>)PageQueryUtils.pageQuery(getSqlMapClientTemplate(),"getUploadFilePageList.UploadFile.trade",uploadFile,pageNum,pageSize);
	}

	/**
	 * 
	 * sql:select a.file_id, a.url, a.size, a.name, a.type, a.user_id, a.create_time, a.update_time, a.delete_flag from upload_file a where a.delete_flag = 0 and 1=0 and a.file_id in ( ? ) order by a.update_time desc, a.create_time desc
	 */
    @SuppressWarnings("unchecked")
	public List<UploadFile> getUploadFilesByFileIds(java.util.List<String> fileIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("fileIds",fileIds);
		return (List<UploadFile>)getSqlMapClientTemplate().queryForList("getUploadFilesByFileIds.UploadFile.trade",params);
	}

	/**
	 * 
	 * sql:UPDATE upload_file SET delete_flag = 1 , update_time = CURRENT_TIMESTAMP(6) where delete_flag = 0 and 1=0 and file_id in ( ? )
	 */
	public java.util.List<String> deleteByFileIds(java.util.List<String> fileIds) throws DataAccessException {
		Map<String,Object> params = new HashMap<String,Object>(1);
		params.put("fileIds",fileIds);
        getSqlMapClientTemplate().update("deleteByFileIds.UploadFile.trade", params);
        return fileIds;
	}

}

